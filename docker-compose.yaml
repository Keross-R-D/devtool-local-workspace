version: '3'

services:
  dev-tools:
    build:
      context: ./remote_vscode
    restart: unless-stopped
    volumes:
      - workspace:/workspace
      - ./ssh:/root/.ssh
      - /var/run/docker.sock:/var/run/docker.sock
    networks:
      - dev-network
    privileged: true
    ports:
      - 8080:8080
      - 2990-3009:2990-3009
      - 8070-8079:8070-8079

  openresty:
    image: openresty/openresty:alpine
    restart: unless-stopped
    ports:
      - "80:80"
    volumes:
      - ./nginx/default.conf:/usr/local/openresty/nginx/conf/nginx.conf:ro
    networks:
      - dev-network


  # elasticsearch:
  #   image: docker.elastic.co/elasticsearch/elasticsearch:7.17.10
  #   container_name: elasticsearch
  #   environment:
  #     - node.name=elasticsearch
  #     - cluster.name=es-docker-cluster
  #     - discovery.type=single-node
  #     - bootstrap.memory_lock=true
  #     - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
  #   ulimits:
  #     memlock:
  #       soft: -1
  #       hard: -1
  #   volumes:
  #     - elasticsearch-data:/usr/share/elasticsearch/data
  #   networks:
  #     - dev-network

  # logstash:
  #   image: docker.elastic.co/logstash/logstash:7.17.10
  #   container_name: logstash
  #   volumes:
  #     - ./logstash/config/logstash.yml:/usr/share/logstash/config/logstash.yml:ro
  #     - ./logstash/pipeline:/usr/share/logstash/pipeline:ro
  #   ports:
  #     - "5140:5140/tcp"
  #     - "5140:5140/udp"
  #   networks:
  #     - dev-network
  #   depends_on:
  #     - elasticsearch

  # kibana:
  #   image: docker.elastic.co/kibana/kibana:7.17.10
  #   container_name: kibana
  #   ports:
  #     - "5601:5601"
  #   environment:
  #     ELASTICSEARCH_URL: http://elasticsearch:9200
  #     ELASTICSEARCH_HOSTS: http://elasticsearch:9200
  #   networks:
  #     - dev-network
  #   depends_on:
  #     - elasticsearch

networks:
  dev-network:
    driver: bridge
    attachable: true

volumes:
  elasticsearch-data:
  workspace: